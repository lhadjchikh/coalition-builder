name: SSR Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "ssr/**"
      - ".github/workflows/test_ssr.yml"
  # Allow manual triggers
  workflow_dispatch:

jobs:
  unit-tests:
    name: SSR Unit Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ssr

    strategy:
      matrix:
        node-version: ["18.x"]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ssr/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npm run typecheck || npm run tsc || echo "Typecheck not available, skipping"

      - name: Run lint
        run: npm run lint || echo "Linting not available, skipping"

      - name: Run build
        run: npm run build

  integration-tests:
    name: SSR Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build the Docker image with caching
      - name: Build SSR Docker image
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --load \
            -t landandbay_ssr:latest \
            ./ssr

      - name: Build Backend Docker image
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --load \
            -t landandbay_app:latest \
            .

      - name: Start all containers
        run: docker compose up -d

      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to be ready..."
          sleep 30

          # Check if services are responding
          echo "Checking if services are up..."

          # Check if backend is responding
          timeout=60
          until curl -s http://localhost:8000/api/ || [ $timeout -le 0 ]; do
            echo "Waiting for backend API to be ready..."
            sleep 5
            timeout=$((timeout-5))
          done

          # Check if SSR is responding
          timeout=60
          until curl -s http://localhost:3000/health || [ $timeout -le 0 ]; do
            echo "Waiting for SSR to be ready..."
            sleep 5
            timeout=$((timeout-5))
          done

      - name: Create test data
        run: |
          # Create test data for API
          docker compose exec -T api bash -c '
          export PYTHONPATH="${PYTHONPATH}:/app/backend"
          python backend/scripts/create_test_data.py
          if [ $? -ne 0 ]; then
            echo "Failed to create test data"
            exit 1
          fi
          '

      - name: Run basic SSR integration tests
        env:
          SSR_URL: http://localhost:3000
          API_URL: http://localhost:8000
          NGINX_URL: http://localhost:80
        run: node ssr/tests/test-ssr-integration-simple.js

      - name: Run comprehensive SSR integration tests
        env:
          SSR_URL: http://localhost:3000
          API_URL: http://localhost:8000
          NGINX_URL: http://localhost:80
        run: node ssr/tests/test-ssr-integration.js

      # Stop all containers when done
      - name: Stop containers
        if: always()
        run: docker compose down
