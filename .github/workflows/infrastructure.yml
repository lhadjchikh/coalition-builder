name: Terraform Infrastructure CI/CD

on:
  push:
    branches: [main]
    paths:
      - "terraform/**"
      - ".github/workflows/infrastructure.yml"
  pull_request:
    branches: [main]
    paths:
      - "terraform/**"
      - ".github/workflows/infrastructure.yml"

jobs:
  terraform_plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: prod
    outputs:
      terraform_plan: ${{ steps.plan.outputs.stdout }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan -no-color
        continue-on-error: true

      - name: Check Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: prod
    needs: terraform_plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && needs.terraform_plan.outputs.terraform_plan != 'No changes'
        run: |
          cd terraform
          terraform apply -auto-approve
