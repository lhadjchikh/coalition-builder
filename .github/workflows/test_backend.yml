name: Backend Tests

on:
  # Allow manual triggers and triggers from other workflows
  workflow_dispatch:

# Set explicit permissions for the GITHUB_TOKEN
permissions:
  contents: read # Only need read access to checkout the code

jobs:
  test:
    runs-on: ubuntu-latest
    # We'll run with simplified tests for non-backend changes to save resources
    # but still ensure the deployment workflow is triggered

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build the Docker image with caching
      - name: Build Docker image
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --load \
            -t coalition_api:latest \
            .

      - name: Start database container
        run: docker compose up -d db

      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Wait for PostgreSQL
        run: |
          timeout=60
          until docker compose exec -T db pg_isready -U postgres || [ $timeout -le 0 ]; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
            timeout=$((timeout-5))
          done
          if [ $timeout -le 0 ]; then
            echo "PostgreSQL failed to start in time"
            exit 1
          fi

      - name: Check if tests are necessary
        id: check_tests
        run: |
          # Use git to check if any backend files were changed
          git fetch origin main
          CHANGES=$(git diff --name-only HEAD origin/main | grep -E "^(backend/|docker-compose.yml|Dockerfile)" -c || echo 0)

          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" && $CHANGES -eq 0 ]]; then
            echo "Running minimal tests for non-backend changes to main branch"
            echo "skip_full_tests=true" >> $GITHUB_OUTPUT
          else
            echo "Running full test suite"
            echo "skip_full_tests=false" >> $GITHUB_OUTPUT
          fi

      - name: Run minimal test (for non-relevant changes)
        if: steps.check_tests.outputs.skip_full_tests == 'true'
        run: |
          echo "Skipping intensive tests for non-relevant changes to ensure deployment workflow gets triggered"
          docker compose run --rm -e PYTHONUNBUFFERED=1 api sh -c "python -c 'print(\"Minimal test passed, allowing deployment workflow to trigger\")'"

      - name: Run backend tests
        if: steps.check_tests.outputs.skip_full_tests != 'true'
        run: |
          docker compose run --rm -e PYTHONUNBUFFERED=1 -e DEBUG=True api sh -c "python manage.py test"

      - name: Stop containers
        if: always()
        run: docker compose down
