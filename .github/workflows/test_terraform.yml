name: Terraform Tests

on:
  workflow_call: # Allow this workflow to be called by other workflows

# Permissions needed for testing
permissions:
  contents: read
  id-token: write # For AWS authentication
  actions: read # Need actions:read for codecov in protected branches

env:
  GO_VERSION: "1.24"
  AWS_DEFAULT_REGION: us-east-1
  TF_IN_AUTOMATION: true
  TERRATEST_TERRAFORM: terraform

jobs:
  # Validate Terraform configurations first
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Terraform Format Check
        run: |
          cd terraform
          terraform fmt -check -recursive

      - name: Terraform Validate
        run: |
          cd terraform
          terraform init -backend=false
          terraform validate

  # Run all tests (unit tests don't need AWS, integration tests do)
  tests:
    name: Terratests
    runs-on: ubuntu-latest
    needs: validate
    environment: test # Use test environment for AWS credentials
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: terraform/tests/go.sum

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Verify AWS credentials
        run: |
          aws sts get-caller-identity
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=${ACCOUNT_ID}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd terraform/tests
          go mod download

      - name: Run unit tests
        run: |
          cd terraform/tests
          go test -short -v -timeout 10m -coverprofile=coverage.out ./modules/

      - name: Run integration tests
        run: |
          cd terraform/tests
          echo "Running integration tests (plan-only) at $(date)"
          go test -v -timeout 10m ./integration/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: lhadjchikh/coalition-builder
          file: ./terraform/tests/coverage.out
          flags: terraform
          name: terraform-coverage
          root_dir: ./terraform/tests
          fail_ci_if_error: false # Don't fail CI if Codecov has issues

  # Final summary job
  terraform-tests:
    name: Terraform Tests Complete
    runs-on: ubuntu-latest
    needs: [validate, tests]
    if: always()
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.validate.result }}" != "success" ]; then
            echo "Terraform validation failed"
            exit 1
          fi
          if [ "${{ needs.tests.result }}" != "success" ]; then
            echo "Go tests failed"
            exit 1
          fi
          echo "All terraform tests passed successfully!"
