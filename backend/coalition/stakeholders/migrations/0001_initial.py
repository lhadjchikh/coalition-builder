# Generated by Django 5.2.4 on 2025-07-10 23:06

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("regions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Stakeholder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the individual or primary contact person",
                        max_length=200,
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        help_text="Organization or company name (can be same as name for individuals)",
                        max_length=200,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        help_text="Job title or role within the organization",
                        max_length=100,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Primary email address for verification and communication",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "street_address",
                    models.CharField(
                        help_text="Street address including number and street name",
                        max_length=255,
                    ),
                ),
                (
                    "city",
                    models.CharField(help_text="City or town name", max_length=100),
                ),
                (
                    "state",
                    models.CharField(
                        help_text="Two-letter state abbreviation (e.g., 'CA', 'NY')",
                        max_length=2,
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(help_text="ZIP or postal code", max_length=10),
                ),
                (
                    "county",
                    models.CharField(
                        blank=True,
                        help_text="County name (optional, auto-populated when possible)",
                        max_length=100,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True,
                        geography=True,
                        help_text="Latitude and longitude coordinates",
                        null=True,
                        srid=4326,
                        verbose_name="Geographic Location",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("farmer", "Farmer"),
                            ("waterman", "Waterman"),
                            ("business", "Business"),
                            ("nonprofit", "Nonprofit"),
                            ("individual", "Individual"),
                            ("government", "Government"),
                            ("other", "Other"),
                        ],
                        help_text="Category of stakeholder (business, nonprofit, individual, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when stakeholder record was first created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when stakeholder record was last modified",
                    ),
                ),
                (
                    "congressional_district",
                    models.ForeignKey(
                        blank=True,
                        help_text="Congressional district assigned based on address geocoding",
                        limit_choices_to={"type": "congressional_district"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="congressional_stakeholders",
                        to="regions.region",
                    ),
                ),
                (
                    "state_house_district",
                    models.ForeignKey(
                        blank=True,
                        help_text="State house district assigned based on address geocoding",
                        limit_choices_to={"type": "state_house_district"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="state_house_stakeholders",
                        to="regions.region",
                    ),
                ),
                (
                    "state_senate_district",
                    models.ForeignKey(
                        blank=True,
                        help_text="State senate district assigned based on address geocoding",
                        limit_choices_to={"type": "state_senate_district"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="state_senate_stakeholders",
                        to="regions.region",
                    ),
                ),
            ],
            options={
                "db_table": "stakeholder",
            },
        ),
    ]
