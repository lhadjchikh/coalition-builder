# Generated by Django 5.2.4 on 2025-07-18 00:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import coalition.content.validators


class Migration(migrations.Migration):

    dependencies = [
        ("content", "0004_alter_contentblock_content_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="homepage",
            name="hero_overlay_color",
            field=models.CharField(
                default="#000000",
                help_text="Hex color code for the overlay (e.g., #000000 for black)",
                max_length=7,
            ),
        ),
        migrations.AddField(
            model_name="homepage",
            name="hero_overlay_enabled",
            field=models.BooleanField(
                default=True,
                help_text="Whether to show overlay on hero image/video for text readability",
            ),
        ),
        migrations.AddField(
            model_name="homepage",
            name="hero_overlay_opacity",
            field=models.FloatField(
                default=0.4,
                help_text="Overlay opacity (0.0 = transparent, 1.0 = opaque)",
                validators=[
                    django.core.validators.MinValueValidator(0.0),
                    django.core.validators.MaxValueValidator(1.0),
                ],
            ),
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        help_text="The video file (.mov, .mp4, .webm)",
                        upload_to="videos/",
                        validators=[
                            coalition.content.validators.validate_video_file_extension,
                        ],
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title or name of the video",
                        max_length=200,
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        help_text="Alt text for the video (accessibility)",
                        max_length=200,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description of the video",
                    ),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        help_text="Author/creator of the video",
                        max_length=200,
                    ),
                ),
                (
                    "license",
                    models.CharField(
                        blank=True,
                        help_text="License of the video (e.g., 'CC BY 2.0', 'All rights reserved')",
                        max_length=100,
                    ),
                ),
                (
                    "source_url",
                    models.URLField(
                        blank=True,
                        help_text="Source URL where the video was obtained",
                    ),
                ),
                (
                    "video_type",
                    models.CharField(
                        choices=[
                            ("general", "General Video"),
                            ("hero", "Hero/Background Video"),
                            ("content", "Content Video"),
                            ("campaign", "Campaign Video"),
                        ],
                        default="general",
                        help_text="Type/category of the video",
                        max_length=20,
                    ),
                ),
                (
                    "autoplay",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the video should autoplay (for hero videos)",
                    ),
                ),
                (
                    "loop",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the video should loop continuously",
                    ),
                ),
                (
                    "muted",
                    models.BooleanField(
                        default=True,
                        help_text="Whether video should be muted by default (required for autoplay)",
                    ),
                ),
                (
                    "show_controls",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to show video playback controls",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this video was uploaded",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this video was last updated",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who uploaded this video",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_videos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Video",
                "verbose_name_plural": "Videos",
                "db_table": "video",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="homepage",
            name="hero_background_video",
            field=models.ForeignKey(
                blank=True,
                help_text="Hero background video (optional, takes precedence over image)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="homepage_hero_videos",
                to="content.video",
            ),
        ),
    ]
