# Generated by Django 5.2.4 on 2025-07-10 23:06

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("campaigns", "0001_initial"),
        ("stakeholders", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Endorsement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "statement",
                    models.TextField(
                        blank=True,
                        help_text="Optional endorsement statement from the stakeholder",
                    ),
                ),
                (
                    "public_display",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this endorsement should be displayed publicly",
                    ),
                ),
                (
                    "verification_token",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique token for email verification",
                        unique=True,
                    ),
                ),
                (
                    "email_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the stakeholder's email has been verified",
                    ),
                ),
                (
                    "verification_sent_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the verification email was sent",
                        null=True,
                    ),
                ),
                (
                    "verified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the email verification was completed",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Email Verification"),
                            ("verified", "Email Verified"),
                            ("approved", "Approved for Display"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        help_text="Current status of the endorsement",
                        max_length=20,
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(blank=True, help_text="Internal notes for admins"),
                ),
                (
                    "reviewed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this endorsement was reviewed by an admin",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this endorsement was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this endorsement was last updated",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        help_text="The policy campaign being endorsed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="endorsements",
                        to="campaigns.policycampaign",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin user who reviewed this endorsement",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_endorsements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "stakeholder",
                    models.ForeignKey(
                        help_text="The stakeholder making this endorsement",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="endorsements",
                        to="stakeholders.stakeholder",
                    ),
                ),
            ],
            options={
                "db_table": "endorsement",
                "unique_together": {("stakeholder", "campaign")},
            },
        ),
    ]
