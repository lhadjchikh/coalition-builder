# Generated by Django 5.2.3 on 2025-06-29 20:08

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name for this theme (e.g., 'Default', 'Land and Bay Stewards')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description of this theme",
                    ),
                ),
                (
                    "primary_color",
                    models.CharField(
                        default="#2563eb",
                        help_text="Primary brand color (hex format, e.g., #2563eb)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "secondary_color",
                    models.CharField(
                        default="#64748b",
                        help_text="Secondary brand color (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "accent_color",
                    models.CharField(
                        default="#059669",
                        help_text="Accent color for highlights and calls-to-action (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "background_color",
                    models.CharField(
                        default="#ffffff",
                        help_text="Main background color (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "section_background_color",
                    models.CharField(
                        default="#f9fafb",
                        help_text="Alternate section background color (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "card_background_color",
                    models.CharField(
                        default="#ffffff",
                        help_text="Card/content block background color (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "heading_color",
                    models.CharField(
                        default="#111827",
                        help_text="Color for headings and titles (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "body_text_color",
                    models.CharField(
                        default="#374151",
                        help_text="Color for body text (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "muted_text_color",
                    models.CharField(
                        default="#6b7280",
                        help_text="Color for muted/secondary text (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "link_color",
                    models.CharField(
                        default="#2563eb",
                        help_text="Color for links (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "link_hover_color",
                    models.CharField(
                        default="#1d4ed8",
                        help_text="Color for links on hover (hex format)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Color must be a valid hex code (e.g., #FF0000 or #F00)",
                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                            ),
                        ],
                    ),
                ),
                (
                    "heading_font_family",
                    models.CharField(
                        default='ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',
                        help_text="Font family for headings (CSS font-family value)",
                        max_length=200,
                    ),
                ),
                (
                    "body_font_family",
                    models.CharField(
                        default='ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',
                        help_text="Font family for body text (CSS font-family value)",
                        max_length=200,
                    ),
                ),
                (
                    "font_size_base",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        help_text="Base font size in rem units (e.g., 1.00 for 16px)",
                        max_digits=3,
                    ),
                ),
                (
                    "font_size_small",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.875,
                        help_text="Small font size in rem units",
                        max_digits=3,
                    ),
                ),
                (
                    "font_size_large",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.125,
                        help_text="Large font size in rem units",
                        max_digits=3,
                    ),
                ),
                (
                    "logo_url",
                    models.URLField(
                        blank=True,
                        help_text="URL to organization logo image",
                    ),
                ),
                (
                    "logo_alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alt text for logo (accessibility)",
                        max_length=200,
                    ),
                ),
                (
                    "favicon_url",
                    models.URLField(blank=True, help_text="URL to favicon image"),
                ),
                (
                    "custom_css",
                    models.TextField(
                        blank=True,
                        help_text="Additional custom CSS for advanced styling (optional)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this theme is currently active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Theme",
                "verbose_name_plural": "Themes",
                "ordering": ["-is_active", "-updated_at"],
            },
        ),
        migrations.AddField(
            model_name="homepage",
            name="theme",
            field=models.ForeignKey(
                blank=True,
                help_text="Theme to use for this homepage (optional, falls back to active theme)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.theme",
            ),
        ),
    ]
